# These entries are shared between all the Immich components

env:
  REDIS_HOSTNAME: '{{ printf "%s-redis-master" .Release.Name }}'
  DB_HOSTNAME: "{{ .Release.Name }}-postgresql"
  DB_USERNAME: "{{ .Values.postgresql.global.postgresql.auth.username }}"
  DB_DATABASE_NAME: "{{ .Values.postgresql.global.postgresql.auth.database }}"
  # -- You should provide your own secret outside of this helm-chart and use `postgresql.global.postgresql.auth.existingSecret` to provide credentials to the postgresql instance
  DB_PASSWORD: "thisshouldnotbeyourpassword"
  TYPESENSE_API_KEY: "typesense"

image:
  tag: v1.52.1

# Dependencies

postgresql:
  enabled: false
  global:
    postgresql:
      auth:
        username: immich
        database: immich

redis:
  enabled: false
  architecture: standalone
  auth:
    enabled: false

# Immich components

server:
  enabled: true
  env:
    NODE_ENV: "production"
  service:
    main:
      enabled: true
      primary: true
      type: ClusterIP
      ports:
        http:
          enabled: true
          primary: true
          port: 3001
          protocol: HTTP
  image:
    # -- image repository
    repository: ghcr.io/immich-app/immich-server
    # -- image pull policy
    pullPolicy: IfNotPresent
  command: "/bin/sh"
  args:
    - "./start-server.sh"

microservices:
  enabled: true
  env:
    NODE_ENV: "production"
  service:
    main:
      enabled: false
      primary: true
      type: ClusterIP
      ports:
        http:
          enabled: true
          primary: true
          port: 3001
          protocol: HTTP
  image:
    # -- image repository
    repository: ghcr.io/immich-app/immich-server
    # -- image pull policy
    pullPolicy: IfNotPresent
  command: "/bin/sh"
  args:
    - "./start-microservices.sh"

machine-learning:
  enabled: true
  image:
    # -- image repository
    repository: ghcr.io/immich-app/immich-machine-learning
    # -- image pull policy
    pullPolicy: IfNotPresent

  service:
    main:
      enabled: true
      primary: true
      type: ClusterIP
      ports:
        http:
          enabled: true
          primary: true
          port: 3003
          protocol: HTTP
  env:
    NODE_ENV: "production"
    TRANSFORMERS_CACHE: /usr/src/app/.transformers_cache

web:
  enabled: true
  image:
    # -- image repository
    repository: ghcr.io/immich-app/immich-web
    # -- image pull policy
    pullPolicy: IfNotPresent
  env:
    NODE_ENV: "production"

  service:
    main:
      enabled: true
      primary: true
      type: ClusterIP
      ports:
        http:
          enabled: true
          primary: true
          port: 3000
          protocol: HTTP

  command: "/bin/sh"
  args:
    - "./entrypoint.sh"

proxy:
  enabled: true
  image:
    # -- image repository
    repository: ghcr.io/immich-app/immich-proxy
    # -- image pull policy
    pullPolicy: IfNotPresent

  service:
    main:
      enabled: true
      primary: true
      type: ClusterIP
      ports:
        http:
          enabled: true
          primary: true
          port: 8080
          protocol: HTTP

  ingress:
    main:
      enabled: false
      hosts:
        - host: immich.local
          paths:
            - path: "/"
      tls: []
